nameOverride: "dr-cluster"
fullnameOverride: "dr-cluster"

type: postgresql
version:
  postgresql: "16"
  timescaledb: "2.15"
  postgis: "3.4"

mode: replica
clusterName: "dc-cluster"  # Link to the main DC cluster

recovery:
  method: backup
  backupName: "dc-cluster-backup-latest"  # The most recent backup name from DC
  clusterName: "dc-cluster"              # Name of the DC cluster

  provider: s3
  s3:
    region: "gds"                 
    endpoint: "http://pg-backup-rook-ceph.rook-ceph.svc.cluster.local:80"  # DR object store endpoint
    bucket: "dc-backups-bucket"         # Object storage bucket name from DC
    path: "/dc"                         # Path to the backup files inside the bucket
    accessKey: "dc-access-key"          # Access key for Rook-Ceph S3-compatible user
    secretKey: "dc-secret-key"          # Secret key for Rook-Ceph S3-compatible user
  retentionPolicy: "30d"                # Retention policy for backups


cluster:
  instances: 3
  imageName: "postgres:16"
  imagePullPolicy: IfNotPresent
  storage:
    size: 8Gi
    storageClass: "slow-storage"
  walStorage:
    enabled: true
    size: 2Gi
    storageClass: "slow-storage"
  resources:
    limits:
      cpu: "1000m"
      memory: "4Gi"
    requests:
      cpu: "1000m"
      memory: "4Gi"
  primaryUpdateMethod: restart
  primaryUpdateStrategy: unsupervised
  logLevel: "info"
  affinity:
    topologyKey: topology.kubernetes.io/zone

backups:
  enabled: true
  provider: s3
  s3:
    region: "us-east-1"
    bucket: "dr-backups-bucket"
    path: "/dr"
    accessKey: "dr-access-key"
    secretKey: "dr-secret-key"
  retentionPolicy: "30d"

monitoring:
  enabled: true
  podMonitor:
    enabled: true
    relabelings: []
  prometheusRule:
    enabled: true
    excludeRules: []

postgresql:
  parameters:
    max_connections: 500
  pg_hba:
    - host all all 10.0.0.0/24 md5

initdb: 
  database: app
  owner: app_user
  postInitSQL:
    - CREATE EXTENSION IF NOT EXISTS pg_stat_statements;

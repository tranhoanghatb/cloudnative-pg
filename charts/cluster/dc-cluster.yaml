apiVersion: v1
data:
  password: YWRtaW4=
  username: YWRtaW4=
kind: Secret
metadata:
  name: cluster-example-app-user
  namespace: postgres1
type: kubernetes.io/basic-auth
---
apiVersion: v1
data:
  password: cG9zdGdyZXM=
  username: cG9zdGdyZXM=
kind: Secret
metadata:
  name: cluster-example-superuser
  namespace: postgres1
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: backup-creds
  namespace: postgres1
data:
  ACCESS_KEY_ID: EMSAHCKLI8AKHD3972RQ
  ACCESS_SECRET_KEY: wRiLHBw01eJCWVQyQyxXukEia4ZQoNB7AvFowztd
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cluster-example-full
  namespace: postgres1
spec:
  description: "Example of cluster"
  imageName: hath85/postgresql:16.2
  imagePullPolicy: IfNotPresent
  # logLevel: debug
  # imagePullSecret is only required if the images are located in a private registry
  # imagePullSecrets:
  #   - name: private_registry_access
  instances: 3
  startDelay: 300
  stopDelay: 300
  primaryUpdateStrategy: unsupervised
  env:
  - name: TZ
    value: Asia/Ho_Chi_Minh

  postgresql:
    parameters:
      shared_buffers: 256MB
      pg_stat_statements.max: '10000'
      pg_stat_statements.track: all
      auto_explain.log_min_duration: '10s'
    pg_hba:
      - host all all 10.244.0.0/16 md5

  # bootstrap:
  #   initdb:
  #     database: app
  #     owner: app
  #     secret:
  #       name: cluster-example-app-user
    # Alternative bootstrap method: start from a backup
    #recovery:
    #  backup:
    #    name: backup-example

  enableSuperuserAccess: true
  superuserSecret:
    name: cluster-example-superuser

  storage:
    storageClass: rook-ceph-block
    size: 1Gi

  backup:
    barmanObjectStore:
      destinationPath: "s3://demo"
      endpointURL: "https://pg-backup.k8s.local"
      s3Credentials:
        accessKeyId:
          name: backup-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: backup-creds
          key: ACCESS_SECRET_KEY
      wal:
        # compression: gzip
        # encryption: AES256
      data:
        # compression: gzip
        # encryption: AES256
        immediateCheckpoint: false
        jobs: 2
    retentionPolicy: "10d"
---    
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: schedule-backup-example
  namespace: postgres1
spec:
  schedule: "0 0 0 * * *"
  backupOwnerReference: self
  cluster:
    name: cluster-example-full
---
apiVersion: postgresql.cnpg.io/v1
kind: Backup
metadata:
  name: backup-example
  namespace: postgres1
spec:
  method: barmanObjectStore
  cluster:
    name: cluster-example-full